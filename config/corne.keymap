#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        spc_shft: spc_shft {
            compatible = "zmk,behavior-hold-tap";
            label = "SPC_SHFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
        };

        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&none  &kp Q            &kp W            &kp F              &kp P         &kp G                         &kp J  &kp L         &kp U               &kp Y             &kp SEMI              &none
&none  &hml LEFT_GUI A  &hml LEFT_ALT R  &hml LEFT_SHIFT S  &hml LCTRL T  &kp D                         &kp H  &hmr RCTRL N  &hmr RIGHT_SHIFT E  &hmr RIGHT_ALT I  &hmr RIGHT_COMMAND O  &none
&none  &kp Z            &kp X            &kp C              &kp V         &kp B                         &kp K  &kp M         &kp COMMA           &kp DOT           &kp FSLH              &none
                                         &kp LCTRL          &mo 1         &spc_shft LEFT_SHIFT SPACE    &mo 2  &kp ENTER     &kp RALT
            >;
        };

        Numeric {
            bindings = <
&none  &kp N1        &kp N2  &kp N3  &kp N4  &kp N5    &trans     &trans     &trans    &trans    &kp BACKSPACE  &none
&none  &kp N6        &kp N7  &kp N8  &kp N9  &kp N0    &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH       &none
&none  &kp LEFT_GUI  &trans  &trans  &trans  &trans    &trans     &trans     &trans    &trans    &trans         &none
                             &trans  &trans  &trans    &trans     &trans     &trans
            >;
        };

        Function+Navigation {
            bindings = <
&none  &kp TAB   &kp GRAVE  &kp UP_ARROW  &trans     &trans    &trans  &trans  &trans  &trans  &kp BACKSPACE  &none
&none  &kp ESC   &kp LEFT   &kp DOWN      &kp RIGHT  &trans    &kp H   &kp J   &kp K   &kp L   &kp ENTER      &none
&none  &kp LGUI  &trans     &trans        &trans     &trans    &trans  &trans  &trans  &trans  &trans         &none
                            &trans        &trans     &trans    &trans  &trans  &trans
            >;
        };

        System {
            bindings = <
&none  &trans   &trans  &trans  &trans  &kp C_RESET    &bt BT_SEL 0          &bt BT_SEL 1          &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR_ALL    &none
&none  &kp DEL  &trans  &trans  &trans  &trans         &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans        &trans        &trans            &none
&none  &trans   &trans  &trans  &trans  &trans         &kp C_VOLUME_DOWN     &kp C_VOL_UP          &kp C_MUTE    &none         &kp C_PLAY_PAUSE  &none
                        &trans  &trans  &trans         &trans                &trans                &trans
            >;
        };

        Mouse+Move {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Go_To_System_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
